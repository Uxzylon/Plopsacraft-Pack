# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  release:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Zip Folder
        run: zip -r Plopsacraft-Pack.zip . -x ".git/*" ".github/*" ".gitignore" "README.md"
      
      - name: SHA1
        run: echo "::set-output name=SHA1::$(sha1sum Plopsacraft-Pack.zip | cut -d ' ' -f 1)"
        id: get-sha1
        
      - name: Rename Zip file
        run: mv Plopsacraft-Pack.zip Plopsacraft-Pack-${{ steps.get-sha1.outputs.SHA1 }}.zip
      
      - name: Create a Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          automatic_release_tag: latest
          title: "Latest Version"
          files: |
            Plopsacraft-Pack-${{ steps.get-sha1.outputs.SHA1 }}.zip
            
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host staging
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.STAGING_SSH_USER }}
          SSH_KEY: ${{ secrets.STAGING_SSH_KEY }}
          SSH_HOST: ${{ secrets.STAGING_SSH_HOST }}
          
      - name: Use ssh
        run: ssh staging 'tmux send-keys -t minecraft-server "forcepack reload ${{ steps.get-sha1.outputs.SHA1 }} https://github.com/Uxzylon/Plopsacraft-Pack/releases/download/latest/Plopsacraft-Pack-${{ steps.get-sha1.outputs.SHA1 }}.zip" ENTER'
